Lab 09 File Handling
In this lab you will learn file handling using C++ functions. One particular application of files is data communication between different applications.
You will create a class that generates data of (any) function like sin or cos. That data is then written onto a file. The file is then opened using Matlab and the data is plotted.

Bonus marks TODO List:
* Example code provided isn't exactly good enough. It only gets the job done. You are encouraged to modify it to suit your needs.
* Ask user for arbitrary 'filename' to read/write.
* Read/write files of arbitrary length.
* Use dynamic data array.
* Functionality to plot any arbitrary function or provide a menu to generate/plot common functions.

- Make a class called 'CPlot'
- CPlot contains an array of type float, e.g. float data[100];
- Make a function to generate data, e.g. 
  for (int i=0; i<100; i++)
      data[i] = sin(2.f * 3.14f * 100.f * i);
	  
- Make two functions to write data in text as well as binary format.
  text:
  fstream fileobj("outfile.txt", ios::out|ios::app);
  for (int i=0; i<100; i++)
      fileobj << data[i] << " ";
	  
  binary:
  fstream fileobj("outfile.bin", ios::out|ios::binary|ios::app);
  fileobj.write((char*)data, 100*sizeof(float));
  
- Make two functions to read and display text as well as binary data.
  text:
  fstream fileobj("outfile.txt", ios::in);
  for (int i=0; i<100; i++) or while(!file.eof()) if reading arbitrary length
  {
      fileobj >> data[i];
	  cout << "data[" << i << "] = " << data[i] << endl;
  }
  
  binary:
  fstream fileobj("outfile.txt", ios::binary|ios::in);
  fileobj.read((char&)data, 100*sizeof(float)); or read in a loop checking for eof for arbitrary length files
  
- Once your data files are generated, these files can be opened in Matlab and data plotted as a graph.
  Use following Matlab scripts to open and plot text and binary files.
  text:
  data = textread('outfile.txt', '%f');
  plot(data);
  
  binary:
  fid = fopen('outbile.bin', 'r', 'l');
  data = fread(fid, 100, 'float');		// Assuming file contains 100 numbers.
  plot(data);
  fclose(fid);
